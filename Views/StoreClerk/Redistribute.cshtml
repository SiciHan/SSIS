@using Team8ADProjectSSIS.Models

@{
    ViewBag.Title = "Redistribute";
    Disbursement disb = ViewBag.disb;
    List<DisbursementItem> disbursementItems = disb.DisbursementItems.ToList();
    List<DisbursementItem> dropdownDisbursementItems = (List<DisbursementItem>) ViewBag.dropdownDisbursementItems;
}

<h5>Department: <b>@Model.Department.Name</b></h5>
@using (Html.BeginForm("ScheduleSingle", "StoreClerk", FormMethod.Post))
{
    <table class="table table-hover">
        <thead>
            <tr>
                <th scope="col">Description</th>
                <th scope="col">Qty Requested</th>
                <th scope="col">Qty from Store</th>
                <th scope="col">Add Qty</th>
                <th scope="col">Dept From</th>
            </tr>
        </thead>
        <tbody>
            @foreach (DisbursementItem i in disbursementItems)
                {
                    <tr>
                        <td>@i.Item.Description<input type="hidden" name="disbItemId" value="@i.IdDisbursementItem" /></td>
                        <td>@i.UnitRequested</td>
                        <td>@i.UnitIssued</td>
                        <td>
                            <input class="slider" type="range" name="transferQtySlider" id="transferQtyInput@(i.IdDisbursementItem)" value=0 min="0" max="0" oninput='transferQtyOutput@(i.IdDisbursementItem).value = transferQtyInput@(i.IdDisbursementItem).value' />
                            <br />
                            <div class="number-input">
                                <button type="button" onclick="this.parentNode.querySelector('input[type=number]').stepDown();transferQtyInput@(i.IdDisbursementItem).value--"></button>
                                <input class="transferQtyNum" type="number" name="transferQtyNum" id="transferQtyOutput@(i.IdDisbursementItem)" value="0" min="0" max="0" oninput='transferQtyInput@(i.IdDisbursementItem).value = transferQtyOutput@(i.IdDisbursementItem).value' />
                                <button type="button" onclick="this.parentNode.querySelector('input[type=number]').stepUp();transferQtyInput@(i.IdDisbursementItem).value++" class="plus"></button>
                            </div>
                        </td>
                        <td>
                            <select id="disbItemIdDeptFrom@(i.IdDisbursementItem)" name="disbItemIdDeptFrom" class="form-control disbItemIdDeptFrom@(i.IdDisbursementItem)">
                                <option value="0" data-unitIssued="0">Select</option>
                                @foreach (DisbursementItem j in dropdownDisbursementItems.Where(x => x.IdItem == i.IdItem).ToList())
                                {
                                    <option value="@j.IdDisbursementItem" data-unitIssued="@j.UnitIssued">@j.Disbursement.Department.Name: @j.UnitIssued</option>
                                }
                            </select>
                            <script>
                                $(function () {
                                    $('#disbItemIdDeptFrom@(i.IdDisbursementItem)').change(function () {
                                        var maxUnits = $(this).find('option:selected').attr("data-unitIssued");
                                        //alert(value);
                                        //$('#transferQtyOutput@(i.IdDisbursementItem)').val(0);
                                        $('#transferQtyOutput@(i.IdDisbursementItem)').prop({
                                            max: maxUnits,
                                            value: 0
                                        });
                                        $('#transferQtyInput@(i.IdDisbursementItem)').prop({
                                            max: maxUnits,
                                            value: 0
                                        }).slider("value");
                                    });
                                });
                            </script>
                        </td>
                    </tr>
                }

            @*@for (int i = 0; i < disbursementItems.Count; i++)
            {
            <tr>
                <td>@disbursementItems[i].Item.Description</td>
                <td>@disbursementItems[i].UnitRequested</td>
                <td>@disbursementItems[i].UnitIssued</td>
                <td>
                    <input type="range" name="transferQty@(disbursementItems[i].IdDisbursementItem)" id="transferQtyInput@(disbursementItems[i].IdDisbursementItem)" value=0 min="0" max="@disbursementItems[i].UnitIssued" oninput='transferQtyOutput@(disbursementItems[i].IdDisbursementItem).value = transferQtyInput@(disbursementItems[i].IdDisbursementItem).value' />
                    <input type="number" name="transferQty@(disbursementItems[i].IdDisbursementItem)" id="transferQtyOutput@(disbursementItems[i].IdDisbursementItem)" />
                </td>
                <td></td>
            </tr>
            }*@


        </tbody>
    </table>
    <input type="hidden" name="disbId" value="@Model.IdDisbursement" />
    <input type="submit" class="btn btn-success" value="Redistribute and Confirm Delivery" />
}

<style>
    .slider {
      -webkit-appearance: none;
      width: 100%;
      height: 10px;
      border-radius: 5px;
      background: #d3d3d3;
      outline: none;
      opacity: 0.7;
      -webkit-transition: .2s;
      transition: opacity .2s;
    }

    .slider:hover {
      opacity: 1;
    }

    .slider::-webkit-slider-thumb {
      -webkit-appearance: none;
      appearance: none;
      width: 15px;
      height: 15px;
      border-radius: 50%;
      background: #4CAF50;
      cursor: pointer;
    }

    .slider::-moz-range-thumb {
      width: 15px;
      height: 15px;
      border-radius: 50%;
      background: #4CAF50;
      cursor: pointer;
    }

    input[type="number"] {
      -webkit-appearance: textfield;
      -moz-appearance: textfield;
      appearance: textfield;
    }

    input[type="number"] {
      -webkit-appearance: textfield;
      -moz-appearance: textfield;
      appearance: textfield;
    }

    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
      -webkit-appearance: none;
    }

    .number-input {
      border: 0;
      display: inline-flex;
    }

    .number-input,
    .number-input * {
      box-sizing: border-box;
    }

    .number-input button {
      outline:none;
      -webkit-appearance: none;
      background-color: transparent;
      border: none;
      align-items: center;
      justify-content: center;
      width: 2rem;
      height: 2rem;
      cursor: pointer;
      margin: 0;
      position: relative;
      box-shadow: 0px 0px 1px #474747;
        border-radius: 50%;
    }

    .number-input button:active {
      transform: translateY(1px);
      transform: translateX(1px);
    }

    .number-input button:before,
    .number-input button:after {
      display: inline-block;
      position: absolute;
      content: '';
      width: 1rem;
      height: 1px;
      background-color: #212121;
      transform: translate(-50%, -50%);
    }
    .number-input button.plus:after {
      transform: translate(-50%, -50%) rotate(90deg);
    }

    .number-input input[type=number] {
      font-family: sans-serif;
      margin: 3px;
      max-width: 4rem;
      padding: .5rem;
      border: none;
      border-width: 0 2px;
      font-size: 1.5rem;
      height: 2rem;
      font-weight: bold;
      text-align: center;
      color:#404b5c;
      border-radius:10%
    }
</style>
